name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  docker:
    needs: release
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Fetch latest tags
        run: git fetch --tags

      - name: Extract version from last tag (safe)
        id: get_version
        run: |
          VERSION=$(git describe --tags --abbrev=0 $(git rev-list --tags --max-count=1))
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set lowercase repo path
        id: image_path
        run: |
          USER_LOWER=$(echo "${{ github.actor }}" | tr '[:upper:]' '[:lower:]')
          REPO_LOWER=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          echo "image=ghcr.io/$USER_LOWER/$REPO_LOWER" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image with version + latest
        run: |
          IMAGE=${{ steps.image_path.outputs.image }}
          VERSION=${{ steps.get_version.outputs.version }}
          docker build -t $IMAGE:$VERSION .
          docker tag $IMAGE:$VERSION $IMAGE:latest
          docker push $IMAGE:$VERSION
          docker push $IMAGE:latest
